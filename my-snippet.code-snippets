{
  "csl": {
    "scope": "javascript,typescript,typescriptreact",
    "description": "console.log",
    "body": [
      "console.log($0)"
    ],
    "prefix": "csl"
  },
  "fc": {
    "scope": "javascript,typescript,typescriptreact",
    "description": "React Function Component",
    "body": [
      "function ${componentName} () {",
      "  return (",
      "    <>",
      "      $0",
      "    </>",
      "  )",
      "}",
      "",
      "export default ${componentName}"
    ],
    "prefix": "fc"
  },
  "gitlab-pages": {
    "scope": "yaml",
    "description": "",
    "body": [
      "image: node:12.16.1",
      "",
      "cache:",
      "  paths:",
      "    - node_modules/",
      "",
      "before_script:",
      "  - npm config set @huyafed:registry https://nexus.huya.com/repository/npm-public/",
      "  - npm i",
      "",
      "pages:",
      "  tags: ",
      "    - pages",
      "  stage: deploy",
      "  script:",
      "    - npm run doc",
      "  artifacts:",
      "    paths:",
      "      - public",
      "  only:",
      "    - master"
    ],
    "prefix": "gitlab-pages"
  },
  "hapi:route": {
    "scope": "typescript,javascript",
    "description": "hapi route",
    "body": [
      "server.route({",
      "  path: '$1',",
      "  method: '${2|GET,POST,PUT,DELETE|}',",
      "  async handler(req, h) {",
      "    $0",
      "  }",
      "})"
    ],
    "prefix": "hapi:route"
  },
  "iife": {
    "scope": "typescript,javascript,typescriptreact",
    "description": "",
    "body": [
      ";(() => {",
      "  $0",
      "})()"
    ],
    "prefix": "iife"
  },
  "impr": {
    "scope": "javascript,typescript,typescriptreact",
    "description": "import react",
    "body": [
      "import * as React from 'react'"
    ],
    "prefix": "impr"
  },
  "next:init": {
    "scope": "javascript,typescript,typescriptreact",
    "description": "import react",
    "body": [
      "function ${pageName}() {",
      "  return (",
      "    <>",
      "    </>",
      "  )",
      "}",
      "",
      "export async function getServerSideProps(ctx) {",
      "  return {",
      "    props: {",
      "",
      "    }",
      "  }",
      "}",
      "",
      "export default ${pageName}"
    ],
    "prefix": "next:init"
  },
  "ust": {
    "scope": "javascript,typescript,typescriptreact",
    "description": "useState",
    "body": [
      "const [ $2, $3 ] = React.useState($1)$0"
    ],
    "prefix": "ust"
  }
}

